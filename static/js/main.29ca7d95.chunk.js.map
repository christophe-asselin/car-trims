{"version":3,"sources":["assets/car_background.jpg","Components/BrandTile.js","Components/Brands.js","Components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BrandTile","listElementStyle","backgroundImage","props","logoUrl","backgroundRepeat","backgroundPosition","backgroundSize","backgroundClip","overflow","display","flexDirection","justifyContent","borderRadius","paddingTop","tileLabelStyle","backgroundColor","color","fontFamily","verticalAlign","padding","columns","className","style","this","name","Component","brands","renderImageTiles","map","brand","key","Brands","homePageStyle","background","height","titleContainerStyle","alignContent","titleStyle","fontSize","paddingBottom","HomePage","App","state","selectedIndex","open","toggle","setState","onTitleClick","handleSelect","renderPage","href","rel","align","navIcon","tabIndex","hasRipple","icon","onClick","cursor","modal","singleSelection","graphic","primaryText","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29ca7d95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car_background.0a1d8fb0.jpg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport {Cell} from '@material/react-layout-grid';\r\n\r\nexport class BrandTile extends Component {\r\n\r\n    listElementStyle = {\r\n        backgroundImage: 'url(' + this.props.logoUrl + ')',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center center',\r\n        backgroundSize: 'contain',\r\n        backgroundClip: 'padding-box',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-end',\r\n        borderRadius: 8 + 'px',\r\n        paddingTop: 78 + '%'\r\n    };\r\n    \r\n    tileLabelStyle = {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n        color: 'white',\r\n        fontFamily: 'Roboto, sans-serif',\r\n        verticalAlign: 'bottom',\r\n        padding: '16px'\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Cell\r\n            columns='2'\r\n            className='tile'\r\n            style={this.listElementStyle}>\r\n                <span style={this.tileLabelStyle}>{this.props.name}</span>\r\n            </Cell>\r\n        )\r\n    }\r\n}\r\n\r\n// propTypes\r\nBrandTile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    logoUrl: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BrandTile;\r\n\r\n","import React from 'react';\r\nimport {Grid, Row} from '@material/react-layout-grid';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport BrandTile from './BrandTile';\r\n\r\nconst brands = [\r\n    { name: 'Honda', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: 'Toyota', logoUrl: 'http://pngimg.com/uploads/car_logo/car_logo_PNG1665.png' },\r\n    { name: 'Ford', logoUrl: 'http://pngimg.com/uploads/car_logo/car_logo_PNG1666.png' },\r\n    { name: 'Chevrolet', logoUrl: 'http://pngimg.com/uploads/car_logo/car_logo_PNG1644.png' },\r\n    { name: 'Jeep', logoUrl: 'http://pngimg.com/uploads/car_logo/car_logo_PNG1648.png' },\r\n    { name: 'Mercedes-Benz', logoUrl: 'http://pngimg.com/uploads/car_logo/car_logo_PNG1655.png' },\r\n    { name: 'BMW', logoUrl: 'http://pngimg.com/uploads/car_logo/car_logo_PNG1641.png' },\r\n    { name: \"Porsche\", logoUrl: 'http://pngimg.com/uploads/car_logo/car_logo_PNG1663.png' }\r\n];\r\n\r\nconst renderImageTiles = () => {\r\n    return brands.map((brand) => (\r\n        <BrandTile key={brand.name} name={brand.name} logoUrl={brand.logoUrl}/>\r\n    ));\r\n};\r\n\r\nexport default function Brands() {\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Row>\r\n                    {renderImageTiles()}\r\n                </Row>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Headline1 } from '@material/react-typography';\r\nimport background from '../assets/car_background.jpg';\r\nimport '@material/react-typography/dist/typography.css';\r\n\r\nconst homePageStyle = {\r\n    backgroundImage: `url(${background})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    height: 100 + '%'\r\n};\r\n\r\nconst titleContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    backgroundColor: 'rgb(98, 0, 238)',\r\n    color: 'white'\r\n};\r\n\r\nconst titleStyle = {\r\n    fontSize: 6 + \"vw\",\r\n    paddingTop: 5 + '%',\r\n    paddingBottom: 5 + '%'\r\n};\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <div style={homePageStyle}>\r\n            <div className='elevation-z1' style={titleContainerStyle}>\r\n                <Headline1 style={titleStyle}>Welcome to CarTrims.info</Headline1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport \"@material/react-drawer/dist/drawer.css\";\r\nimport '@material/react-top-app-bar/dist/top-app-bar.css';\r\nimport '@material/react-material-icon/dist/material-icon.css';\r\nimport '@material/react-list/dist/list.css';\r\nimport TopAppBar, {\r\n    TopAppBarFixedAdjust, \r\n    TopAppBarIcon,\r\n    TopAppBarRow,\r\n    TopAppBarSection,\r\n    TopAppBarTitle,\r\n  } from '@material/react-top-app-bar';\r\nimport Drawer, { DrawerAppContent, DrawerContent, DrawerHeader, DrawerTitle } from '@material/react-drawer';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport List, { ListItem, ListItemGraphic, ListItemText } from '@material/react-list';\r\nimport Brands from './Components/Brands';\r\nimport HomePage from './Components/HomePage';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        selectedIndex: 0,\r\n        open: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            selectedIndex: this.state.selectedIndex,\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    onTitleClick = () => {\r\n        this.setState({\r\n            selectedIndex: 0,\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleSelect = (selectedIndex) => {\r\n        this.setState({\r\n            selectedIndex: selectedIndex,\r\n            open: false\r\n        });\r\n    }\r\n\r\n    renderPage = () => {\r\n        switch (this.state.selectedIndex) {\r\n            case 1:\r\n                return (<Brands/>);\r\n            case 2:\r\n                return (<p>Models</p>);\r\n            case 3:\r\n                return (<p>Trim Levels</p>);\r\n            case 4:\r\n                return (<p>About</p>);\r\n            default:\r\n                return (<HomePage/>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='drawer-container'>\r\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\r\n                <TopAppBar className='elevation-z2'>\r\n                    <TopAppBarRow>\r\n                        <TopAppBarSection align='start'>\r\n                            <TopAppBarIcon navIcon tabIndex={0}>\r\n                                <MaterialIcon hasRipple icon='menu' onClick={this.toggle} />\r\n                            </TopAppBarIcon>\r\n                            <TopAppBarTitle\r\n                            onClick={this.onTitleClick}\r\n                            style={{cursor: 'pointer'}}\r\n                            >CarTrims.info</TopAppBarTitle>\r\n                        </TopAppBarSection>\r\n                    </TopAppBarRow>\r\n                </TopAppBar>\r\n\r\n                <TopAppBarFixedAdjust className='top-app-bar-fix-adjust'>\r\n                    <Drawer modal open={this.state.open}>\r\n                        {/* <DrawerHeader>\r\n                            <DrawerTitle tag='h2'>\r\n                                Site Map\r\n                            </DrawerTitle>\r\n                        </DrawerHeader> */}\r\n\r\n                        <DrawerContent>\r\n                            <List\r\n                            singleSelection\r\n                            selectedIndex={this.state.selectedIndex}\r\n                            handleSelect={this.handleSelect}\r\n                            >\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='home' />} />\r\n                                    <ListItemText primaryText='Home' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='directions_car' />} />\r\n                                    <ListItemText primaryText='Brands' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='filter_list' />} />\r\n                                    <ListItemText primaryText='Models' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='attach_money' />} />\r\n                                    <ListItemText primaryText='Trim Levels' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='alternate_email' />} />\r\n                                    <ListItemText primaryText='About' />\r\n                                </ListItem>\r\n                            </List>\r\n                        </DrawerContent>\r\n                    </Drawer>\r\n\r\n                    <DrawerAppContent className='drawer-app-content'>\r\n                        {this.renderPage()}\r\n                    </DrawerAppContent>\r\n                </TopAppBarFixedAdjust>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}