{"version":3,"sources":["assets/car_background.jpg","Components/BrandTile.js","Components/Brands.js","Components/HomePage.js","Components/CarModelTile.js","Components/CarModels.js","Components/CarTrimTile.js","Components/TrimInfoDetails.js","Components/TrimInfo.js","Components/CarTrims.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BrandTile","listElementStyle","backgroundImage","props","logoUrl","backgroundRepeat","backgroundPosition","backgroundSize","backgroundClip","overflow","display","flexDirection","justifyContent","borderRadius","paddingTop","tileLabelStyle","backgroundColor","color","fontFamily","verticalAlign","padding","columns","className","style","this","onClick","handleClick","name","Component","brands","Brands","renderImageTiles","map","brand","key","handleBrandSelect","homePageStyle","background","height","titleContainerStyle","alignContent","titleStyle","fontSize","paddingBottom","HomePage","CarModelTile","modelInfo","model","generation","wide","imageUrl","startYear","endYear","models","CarModels","renderModelTiles","filter","handleModelSelect","CarTrimTile","trimInfo","trim","stubList","tag","nonInteractive","twoLine","primaryText","secondaryText","TrimInfoDetails","updateWindowDimensions","setState","activeIndex","state","width","window","innerWidth","handleActiveIndexUpdate","renderTabContent","renderOverviewTabContent","renderMechanicalTabContent","renderEquipmentTabContent","tabBarStyle","boxShadow","bind","addEventListener","removeEventListener","Fragment","overflowY","TrimInfo","visibility","visible","position","zIndex","backButtonContainerStyle","backButtonStyle","cursor","backgroundImageStyle","backgroundPositionY","contentContainerStyle","icon","hasRipple","onClose","trims","CarTrims","trimInfoVisisble","showTrimInfo","hideTrimInfo","renderCarTrimTiles","id","App","selectedIndex","open","selectedBrand","selectedModel","selectedGeneration","toggle","onTitleClick","handleSelect","renderPage","href","rel","align","navIcon","tabIndex","modal","singleSelection","graphic","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93a8a796.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car_background.0a1d8fb0.jpg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport {Cell} from '@material/react-layout-grid';\r\n\r\nexport class BrandTile extends Component {\r\n\r\n    listElementStyle = {\r\n        backgroundImage: 'url(' + this.props.logoUrl + ')',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center center',\r\n        backgroundSize: 'contain',\r\n        backgroundClip: 'padding-box',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-end',\r\n        borderRadius: 8 + 'px',\r\n        paddingTop: 78 + '%'\r\n    };\r\n    \r\n    tileLabelStyle = {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n        color: 'white',\r\n        fontFamily: 'Roboto, sans-serif',\r\n        verticalAlign: 'bottom',\r\n        padding: '16px'\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Cell\r\n            columns='2'\r\n            className='tile'\r\n            style={this.listElementStyle}\r\n            onClick={() => this.props.handleClick(this.props.name)}>\r\n                <span style={this.tileLabelStyle}>{this.props.name}</span>\r\n            </Cell>\r\n        )\r\n    }\r\n}\r\n\r\n// propTypes\r\nBrandTile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    logoUrl: PropTypes.string.isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BrandTile;\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Row} from '@material/react-layout-grid';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport BrandTile from './BrandTile';\r\n\r\nconst brands = [\r\n    { name: 'Honda', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: 'Toyota', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: 'Ford', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: 'Chevrolet', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: 'Jeep', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: 'Mercedes-Benz', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: 'BMW', logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' },\r\n    { name: \"Porsche\", logoUrl: 'https://www.carlogos.org/logo/Honda-logo-1920x1080.png' }\r\n];\r\n\r\nexport class Brands extends Component {\r\n    \r\n    renderImageTiles = () => {\r\n        return brands.map((brand) => (\r\n            <BrandTile\r\n            key={brand.name}\r\n            name={brand.name}\r\n            logoUrl={brand.logoUrl}\r\n            handleClick={this.props.handleBrandSelect}/>\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid>\r\n                    <Row>\r\n                        {this.renderImageTiles()}\r\n                    </Row>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBrands.propTypes = {\r\n    handleBrandSelect: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Brands;\r\n\r\n","import React from 'react';\r\nimport { Headline1 } from '@material/react-typography';\r\nimport background from '../assets/car_background.jpg';\r\nimport '@material/react-typography/dist/typography.css';\r\n\r\nconst homePageStyle = {\r\n    backgroundImage: `url(${background})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    height: 100 + '%'\r\n};\r\n\r\nconst titleContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    backgroundColor: 'rgb(98, 0, 238)',\r\n    color: 'white'\r\n};\r\n\r\nconst titleStyle = {\r\n    fontSize: 6 + \"vw\",\r\n    paddingTop: 5 + '%',\r\n    paddingBottom: 5 + '%'\r\n};\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <div style={homePageStyle}>\r\n            <div className='elevation-z1' style={titleContainerStyle}>\r\n                <Headline1 style={titleStyle}>Welcome to CarTrims.info</Headline1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Cell} from '@material/react-layout-grid';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport Card, {\r\n    CardPrimaryContent,\r\n    CardMedia\r\n} from \"@material/react-card\";\r\nimport '@material/react-card/dist/card.css';\r\nimport { Headline6, Subtitle2 } from '@material/react-typography';\r\nimport '@material/react-typography/dist/typography.css';\r\n\r\nexport class CarModelTile extends Component {\r\n    render() {\r\n        return (\r\n            <Cell columns='2'>\r\n                <Card\r\n                onClick={() =>\r\n                    this.props.handleClick(this.props.modelInfo.model, this.props.modelInfo.brand, this.props.modelInfo.generation)\r\n                }>\r\n                    <CardPrimaryContent>\r\n                        <CardMedia wide imageUrl='https://st.motortrend.com/uploads/sites/10/2018/01/2018-Toyota-Corolla-ECO-front-three-quarter.jpg'/>\r\n                        <Headline6>{this.props.modelInfo.brand + ' ' + this.props.modelInfo.model}</Headline6>\r\n                        <Subtitle2>{\r\n                            `Gen. ${this.props.modelInfo.generation} (${this.props.modelInfo.startYear} - ${this.props.modelInfo.endYear})`\r\n                        }</Subtitle2>\r\n                    </CardPrimaryContent>\r\n                </Card>\r\n            </Cell>\r\n        )\r\n    }\r\n}\r\n\r\n// propTypes\r\nCarModelTile.propTypes = {\r\n    modelInfo: PropTypes.object.isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CarModelTile;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Row} from '@material/react-layout-grid';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport CarModelTile from './CarModelTile';\r\n\r\nconst models = [\r\n    { brand: 'Honda', model: 'Civic', generation: 10, startYear: 2016, endYear: 2019 },\r\n    { brand: 'Honda', model: 'Civic', generation: 9, startYear: 2011, endYear: 2015 },\r\n    { brand: 'Toyota', model: 'Corolla', generation: 12, startYear: 2018, endYear: 2019 },\r\n    { brand: 'Toyota', model: 'Corolla', generation: 11, startYear: 2012, endYear: 2019 }\r\n];\r\n\r\nexport class CarModels extends Component {\r\n    renderModelTiles = () => {\r\n        return models.filter(model => this.props.brand ? model.brand === this.props.brand : true).map(model => (\r\n            <CarModelTile\r\n            key={`${model.brand}-${model.model}-${model.generation}`}\r\n            modelInfo={model}\r\n            handleClick={this.props.handleModelSelect}\r\n            />\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid>\r\n                    <Row>\r\n                        {this.renderModelTiles()}\r\n                    </Row>\r\n                </Grid>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarModels.propTypes = {\r\n    brand: PropTypes.string.isRequired,\r\n    handleModelSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CarModels;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Cell} from '@material/react-layout-grid';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport Card, {\r\n    CardPrimaryContent,\r\n    CardMedia\r\n} from \"@material/react-card\";\r\nimport '@material/react-card/dist/card.css';\r\nimport { Headline6, Subtitle2 } from '@material/react-typography';\r\nimport '@material/react-typography/dist/typography.css';\r\n\r\nexport class CarTrimTile extends Component {\r\n    render() {\r\n        return (\r\n            <Cell columns='2'>\r\n                <Card onClick={() => this.props.onClick()}>\r\n                    <CardPrimaryContent>\r\n                        <CardMedia wide imageUrl='https://st.motortrend.com/uploads/sites/10/2018/01/2018-Toyota-Corolla-ECO-front-three-quarter.jpg'/>\r\n                        <Headline6>{`${this.props.trimInfo.brand} ${this.props.trimInfo.model} ${this.props.trimInfo.trim}`}</Headline6>\r\n                        <Subtitle2>{\r\n                            `Gen. ${this.props.trimInfo.generation} (${this.props.trimInfo.startYear} - ${this.props.trimInfo.endYear})`\r\n                        }</Subtitle2>\r\n                    </CardPrimaryContent>\r\n                </Card>\r\n            </Cell>\r\n        )\r\n    }\r\n}\r\n\r\n// propTypes\r\nCarTrimTile.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    trimInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CarTrimTile;\r\n","import React, { Component } from 'react';\r\nimport Tab from '@material/react-tab';\r\nimport TabBar from '@material/react-tab-bar';\r\nimport '@material/react-tab-bar/dist/tab-bar.css';\r\nimport '@material/react-tab-scroller/dist/tab-scroller.css';\r\nimport '@material/react-tab/dist/tab.css';\r\nimport '@material/react-tab-indicator/dist/tab-indicator.css';\r\nimport List, {\r\n    ListItem, ListItemText, ListGroup,\r\n    ListGroupSubheader,ListDivider\r\n  } from '@material/react-list';\r\nimport '@material/react-list/dist/list.css';\r\n\r\nconst stubList = (\r\n    <ListGroup>\r\n        <ListGroupSubheader tag='h2'>Body and Chassis</ListGroupSubheader>\r\n        <List nonInteractive twoLine>\r\n            <ListItem>\r\n                <ListItemText\r\n                primaryText='Class'\r\n                secondaryText='Compact Car'/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                primaryText='Body Style'\r\n                secondaryText='4-door sedan'\r\n                />\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                primaryText='Layout'\r\n                secondaryText='Front-engine, front-wheel-drive'/>\r\n            </ListItem>\r\n        </List>\r\n        <ListDivider tag='div'/>\r\n        <ListGroupSubheader tag='h2'>Body and Chassis</ListGroupSubheader>\r\n        <List nonInteractive twoLine>\r\n            <ListItem>\r\n                <ListItemText\r\n                primaryText='Class'\r\n                secondaryText='Compact Car'/>\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                primaryText='Body Style'\r\n                secondaryText='4-door sedan'\r\n                />\r\n            </ListItem>\r\n            <ListItem>\r\n                <ListItemText\r\n                primaryText='Layout'\r\n                secondaryText='Front-engine, front-wheel-drive'/>\r\n            </ListItem>\r\n        </List>\r\n    </ListGroup>\r\n);\r\n\r\nexport default class TrimInfoDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { activeIndex: 0, width: 0 };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    updateWindowDimensions = () => this.setState({ activeIndex: this.state.activeIndex, width: window.innerWidth });\r\n\r\n    handleActiveIndexUpdate = (activeIndex) => this.setState({ activeIndex, width: this.state.width });\r\n\r\n    renderTabContent = () => {\r\n        switch (this.state.activeIndex) {\r\n            default:\r\n                return this.renderOverviewTabContent();\r\n            case 1:\r\n                return this.renderMechanicalTabContent();\r\n            case 2:\r\n                return this.renderEquipmentTabContent();\r\n        }\r\n    };\r\n\r\n    renderOverviewTabContent = () => stubList;\r\n\r\n    renderMechanicalTabContent = () => stubList;\r\n\r\n    renderEquipmentTabContent = () => stubList;\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    tabBarStyle = {\r\n        boxShadow: '0 2px 4px -4px rgba(0,0,0,.2), 0 4px 5px -5px rgba(0,0,0,.14), 0 1px 10px -10px rgba(0,0,0,.12)'\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <TabBar\r\n                style={this.tabBarStyle}\r\n                activeIndex={this.state.activeIndex}\r\n                handleActiveIndexUpdate={this.handleActiveIndexUpdate}>\r\n                    <Tab style={{ width: (this.state.width / 3) }}>\r\n                        <span className='mdc-tab__text-label'>Overview</span>\r\n                    </Tab>\r\n                    <Tab style={{ width: (this.state.width / 3) }}>\r\n                        <span className='mdc-tab__text-label'>Mechanical</span>\r\n                    </Tab>\r\n                    <Tab style={{ width: (this.state.width / 3) }}>\r\n                        <span className='mdc-tab__text-label'>Equipment</span>\r\n                    </Tab>\r\n                </TabBar>\r\n                <div style={{overflowY: 'auto'}}>\r\n                    {this.renderTabContent()}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport '@material/react-material-icon/dist/material-icon.css';\r\nimport { Headline5, Subtitle1 } from '@material/react-typography';\r\nimport '@material/react-typography/dist/typography.css';\r\nimport TrimInfoDetails from './TrimInfoDetails';\r\n\r\nexport class TrimInfo extends Component {\r\n\r\n    style = {\r\n        width: '100%',\r\n        height: '100%',\r\n        visibility: this.props.visible,\r\n        position: 'absolute',\r\n        zIndex: 15,\r\n        backgroundColor: 'white'\r\n    };\r\n\r\n    backButtonContainerStyle = {position: 'absolute'};\r\n\r\n    backButtonStyle = {\r\n        color: 'white',\r\n        cursor: 'pointer',\r\n        padding: '12px'\r\n    };\r\n\r\n    backgroundImageStyle = {\r\n        height: '25%',\r\n        width: '100%',\r\n        backgroundImage: 'url(https://st.motortrend.com/uploads/sites/10/2018/01/2018-Toyota-Corolla-ECO-front-three-quarter.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPositionY: 'center',\r\n        backgroundSize: 'cover'\r\n    };\r\n\r\n    contentContainerStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'relative',\r\n        height: '75%',\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    titleStyle = { padding: '15px 25px' };\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.style}>\r\n                <div className='mdc-top-app-bar__section' style={this.backButtonContainerStyle}>\r\n                    <MaterialIcon\r\n                    className='mdc-top-app-bar__navigation-icon'\r\n                    icon='arrow_back'\r\n                    hasRipple\r\n                    style={this.backButtonStyle}\r\n                    onClick={() => this.props.onClose()}\r\n                    />\r\n                </div>\r\n                <div style={this.backgroundImageStyle}></div>\r\n                <div style={this.contentContainerStyle}>\r\n                    <div style={this.titleStyle}>\r\n                        <Headline5>Toyota Corolla S</Headline5>\r\n                        <Subtitle1>Gen. 11 (2012 - 2019)</Subtitle1>\r\n                    </div>\r\n                    <TrimInfoDetails/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTrimInfo.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    visible: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TrimInfo;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Row} from '@material/react-layout-grid';\r\nimport '@material/react-layout-grid/dist/layout-grid.css';\r\nimport CarTrimTile from './CarTrimTile';\r\nimport TrimInfo from './TrimInfo';\r\n\r\nconst trims = [\r\n    { brand: 'Honda', model: 'Civic', trim: 'Si', generation: 10, startYear: 2016, endYear: 2019 },\r\n    { brand: 'Toyota', model: 'Corolla', trim: 'L', generation: 11, startYear: 2012, endYear: 2019 },\r\n    { brand: 'Toyota', model: 'Corolla', trim: 'LE', generation: 11, startYear: 2012, endYear: 2019 },\r\n    { brand: 'Toyota', model: 'Corolla', trim: 'LE Eco', generation: 11, startYear: 2012, endYear: 2019 },\r\n    { brand: 'Toyota', model: 'Corolla', trim: 'S', generation: 11, startYear: 2012, endYear: 2019 }\r\n];\r\n\r\nexport class CarTrims extends Component {\r\n    state = { trimInfoVisisble: 'hidden' }\r\n\r\n    showTrimInfo = () => this.setState({ trimInfoVisisble: 'visible' });\r\n\r\n    hideTrimInfo = () => this.setState({ trimInfoVisisble: 'hidden' });\r\n\r\n    renderCarTrimTiles = () => {\r\n        return trims.filter(\r\n                trim => this.props.model ?\r\n                    (this.props.model === trim.model && this.props.brand === trim.brand && this.props.generation === trim.generation) :\r\n                    true\r\n            ).map(trim => (\r\n                <CarTrimTile\r\n                key={`${trim.brand}-${trim.model}-${trim.generation}-${trim.trim}`}\r\n                trimInfo={trim}\r\n                onClick={this.showTrimInfo}\r\n                />\r\n            )\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TrimInfo\r\n                id={0}\r\n                visible={this.state.trimInfoVisisble}\r\n                onClose={this.hideTrimInfo}/>\r\n                <Grid>\r\n                    <Row>\r\n                        {this.renderCarTrimTiles()}\r\n                    </Row>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCarTrims.propTypes = {\r\n    brand: PropTypes.string.isRequired,\r\n    model: PropTypes.string.isRequired,\r\n    generation: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CarTrims;\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport \"@material/react-drawer/dist/drawer.css\";\r\nimport '@material/react-top-app-bar/dist/top-app-bar.css';\r\nimport '@material/react-material-icon/dist/material-icon.css';\r\nimport '@material/react-list/dist/list.css';\r\nimport TopAppBar, {\r\n    TopAppBarFixedAdjust, \r\n    TopAppBarIcon,\r\n    TopAppBarRow,\r\n    TopAppBarSection,\r\n    TopAppBarTitle,\r\n  } from '@material/react-top-app-bar';\r\nimport Drawer, { DrawerAppContent, DrawerContent } from '@material/react-drawer';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport List, { ListItem, ListItemGraphic, ListItemText } from '@material/react-list';\r\nimport Brands from './Components/Brands';\r\nimport HomePage from './Components/HomePage';\r\nimport CarModels from './Components/CarModels';\r\nimport CarTrims from './Components/CarTrims';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        selectedIndex: 0,\r\n        open: false,\r\n        selectedBrand: '',\r\n        selectedModel: '',\r\n        selectedGeneration: -1\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            selectedIndex: this.state.selectedIndex,\r\n            open: !this.state.open,\r\n            selectedBrand: this.state.selectedBrand,\r\n            selectedModel: this.state.selectedModel,\r\n            selectedGeneration: this.state.selectedGeneration\r\n        });\r\n    };\r\n\r\n    onTitleClick = () => {\r\n        this.setState({\r\n            selectedIndex: 0,\r\n            open: false,\r\n            selectedBrand: '',\r\n            selectedModel: '',\r\n            selectedGeneration: -1\r\n        });\r\n    };\r\n\r\n    handleSelect = (selectedIndex) => {\r\n        this.setState({\r\n            selectedIndex: selectedIndex,\r\n            open: false,\r\n            selectedBrand: '',\r\n            selectedModel: '',\r\n            selectedGeneration: -1\r\n        });\r\n    };\r\n\r\n    handleBrandSelect = (brand) => {\r\n        this.setState({\r\n            selectedIndex: 2,\r\n            open: false,\r\n            selectedBrand: brand,\r\n            selectedModel: '',\r\n            selectedGeneration: -1\r\n        });\r\n    };\r\n\r\n    handleModelSelect = (model, brand, generation) => {\r\n        this.setState({\r\n            selectedIndex: 3,\r\n            open: false,\r\n            selectedBrand: brand,\r\n            selectedModel: model,\r\n            selectedGeneration: generation\r\n        });\r\n    }\r\n\r\n    renderPage = () => {\r\n        switch (this.state.selectedIndex) {\r\n            case 1:\r\n                return (<Brands handleBrandSelect={this.handleBrandSelect}/>);\r\n            case 2:\r\n                return (<CarModels brand={this.state.selectedBrand} handleModelSelect={this.handleModelSelect}/>);\r\n            case 3:\r\n                return (\r\n                    <CarTrims\r\n                    brand={this.state.selectedBrand}\r\n                    model={this.state.selectedModel}\r\n                    generation={this.state.selectedGeneration}\r\n                    />\r\n                );\r\n            case 4:\r\n                return (<p>About</p>);\r\n            default:\r\n                return (<HomePage/>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='drawer-container'>\r\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\r\n                <TopAppBar className='elevation-z2' style={{zIndex: 100}}>\r\n                    <TopAppBarRow>\r\n                        <TopAppBarSection align='start'>\r\n                            <TopAppBarIcon navIcon tabIndex={0}>\r\n                                <MaterialIcon hasRipple icon='menu' onClick={this.toggle} />\r\n                            </TopAppBarIcon>\r\n                            <TopAppBarTitle\r\n                            onClick={this.onTitleClick}\r\n                            style={{cursor: 'pointer'}}\r\n                            >CarTrims.info</TopAppBarTitle>\r\n                        </TopAppBarSection>\r\n                    </TopAppBarRow>\r\n                </TopAppBar>\r\n\r\n                <TopAppBarFixedAdjust className='top-app-bar-fix-adjust'>\r\n                    <Drawer modal open={this.state.open}>\r\n                        <DrawerContent>\r\n                            <List\r\n                            singleSelection\r\n                            selectedIndex={this.state.selectedIndex}\r\n                            handleSelect={this.handleSelect}\r\n                            >\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='home' />} />\r\n                                    <ListItemText primaryText='Home' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='directions_car' />} />\r\n                                    <ListItemText primaryText='Brands' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='filter_list' />} />\r\n                                    <ListItemText primaryText='Models' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='attach_money' />} />\r\n                                    <ListItemText primaryText='Trims' />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemGraphic graphic={<MaterialIcon icon='info' />} />\r\n                                    <ListItemText primaryText='About' />\r\n                                </ListItem>\r\n                            </List>\r\n                        </DrawerContent>\r\n                    </Drawer>\r\n\r\n                    <DrawerAppContent className='drawer-app-content'>\r\n                        {this.renderPage()}\r\n                    </DrawerAppContent>\r\n                </TopAppBarFixedAdjust>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}